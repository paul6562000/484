CREATE TABLE USERS (
    USER_ID (NUMBER) NOT NULL,
    FIRST_NAME (VARCHAR2(100)) NOT NULL,
    LAST_NAME (VARCHAR2(100)) NOT NULL,
    YEAR_OF_BIRTH (INTEGER),
    MONTH_OF_BIRTH (INTEGER),
    DAY_OF_BIRTH (INTEGER),
    GENDER (VARCHAR2(100)),
    PRIMARY KEY (USER_ID)
)
-- **FRIEND TRIGGER IN APPENDIX (HOW TO AVOID DUPLICATION)
CREATE TABLE FRIENDS (
    USER1_ID (NUMBER) NOT NULL,
    USER2_ID (NUMBER) NOT NULL,
    PRIMARY KEY (USER1_ID, USER2_ID),
    FOREIGN KEY (USER1_ID) REFERENCES (USERS(USER_ID)),
    FOREIGN KEY (USER2_ID) REFERENCES (USERS(USER_ID))
)
CREATE TABLE CITIES (
    CITY_ID (INTEGER) NOT NULL,
    CITY_NAME (VARCHAR2(100)) NOT NULL,
    STATE_NAME (VARCHAR2(100)) NOT NULL,
    COUNTRY_NAME (VARCHAR2(100)) NOT NULL,
    PRIMARY KEY (CITY_ID)
)
CREATE TABLE USER_CURRENT_CITIES (
    USER_ID (NUMBER) NOT NULL,
    CURRENT_CITY_ID (INTEGER) NOT NULL,
    PRIMARY KEY (USER_ID), -- KEY CONSTRAINT
    FOREIGN KEY (USER_ID) REFERENCES USERS,
    FOREIGN KEY (CURRENT_CITY_ID) REFERENCES CITY(CITY_ID)
)
CREATE TABLE USER_HOMWTOWN_CITIES (
    USER_ID (NUMBER) NOT NULL,
    HOMWTOWN_CITY_ID (INTEGER) NOT NULL,
    PRIMARY KEY (USER_ID), -- KEY CONSTRAINT
    FOREIGN KEY (USER_ID) REFERENCES USERS,
    FOREIGN KEY (HOMWTOWN_CITY_ID) REFERENCES CITY(CITY_ID)
)
-- JENNYS WORK BELOW UNSURE NEED TO BE REVIEWD
CREATE TABLE MESSAGES (
    MESSAGE_ID (NUMBER) NOT NULL,
    SENDER_ID (NUMBER) NOT NULL,
    RECEIVER_ID (NUMBER) NOT NULL,
    MESSAGE_CONTENT (VARCHAR2(2000)) NOT NULL, 
    SENT_TIME (TIMESTAMP) NOT NULL, --WHAT TO PUT IN TIMESTAMP (JUST LIKE 00:00?)
    PRIMARY KEY(MESSAGE_ID),
    FOREIGN KEY (SENDER_ID) REFERENCES USERS(USER_ID),
    FOREIGN KEY (RECEIVER_ID) REFERENCES USERS(USER_ID),
)
CREATE TABLE PROGRAMS(
    PROGRAM_ID (INTEGER) NOT NULL,
    INSTITUTION (VARCHAR2(100)) NOT NULL,
    CONCENTRATION (VARCHAR2(100)) NOT NULL,
    DEGREE (VARCHAR2(100)) NOT NULL
)
CREATE TABLE EDUCATION (
    USER_ID (NUMBER) NOT NULL,
    PROGRAM_ID (INTEGER) NOT NULL,
    PROGRAM_YEAR (INTEGER) NOT NULL
)
CREATE TABLE USER_EVENTS (
    EVENT_ID (NUMBER) NOT NULL,
    EVENT_CREATOR_ID (NUMBER) NOT NULL,
    EVENT_NAME (VARCHAR2(100)) NOT NULL,
    EVENT_TAGLINE (VARCHAR2(100)),
    EVENT_DESCRIPTION (VARCHAR2(100)),
    EVENT_HOST (VARCHAR2(100)),
    EVENT_TYPE (VARCHAR2(100)),
    EVENT_SUBTYPE (VARCHAR2(100)),
    EVENT_ADDRESS (VARCHAR2(2000)),
    EVENT_CITY_ID (INTEGER) NOT NULL,
    EVENT_START_TIME (TIMESTAMP),
    EVENT_END_TIME (TIMESTAMP),
    PRIMARY KEY (EVENT_ID)
    FOREIGN KEY (EVENT_CREATOR_ID) REFERENCES USERS(USER_ID)
    ON DELETE NO ACTION --PARTICIPATION CONSTRAINT
)
CREATE TABLE PARTICIPANTS (
    EVENT_ID (NUMBER) NOT NULL,
    USER_ID (NUMBER) NOT NULL,
    CONFIRMATION (VARCHAR2(100)) NOT NULL,
)
CREATE TABLE ALBUMS (
    ALBUM_ID (NUMBER) NOT NULL,
    ALBUM_OWNER_ID (NUMBER) NOT NULL,
    ALBUM_NAME (VARCHAR2(100)) NOT NULL,
    ALBUM_CREATED_TIME (TIMESTAMP) NOT NULL, 
    ALBUM_MODIFIED_TIME (TIMESTAMP),
    ALBUM_LINK (VARCHAR2(100)) NOT NULL,
    ALBUM_VISIBILITY (VARCHAR2(100)) NOT NULL,
    COVER_PHOTO_ID (NUMBER) NOT NULL,
    PRIMARY KEY(ALBUM_ID)
)
CREATE TABLE PHOTOS (
    PHOTO_ID (NUMBER) NOT NULL,
    ALBUM_ID (NUMBER) NOT NULL,
    PHOTO_CAPTION (VARCHAR2(2000)),
    PHOTO_CREATED_TIME (TIMESTAMP) NOT NULL,
    PHOTO_MODIFIED_TIME (TIMESTAMP),
    PHOTO_LINK (VARCHAR2(2000)) NOT NULL,
    PRIMARY KEY(PHOTO_ID)
)
CREATE TABLE TAGS (
    TAG_PHOTO_ID (NUMBER) NOT NULL,
    TAG_SUBJECT_ID (NUMBER) NOT NULL,
    TAG_CREATED_TIME (TIMESTAMP) NOT NULL,
    TAG_X (NUMBER) NOT NULL,
    TAG_Y (NUMBER) NOT NULL,
    PRIMARY KEY()
)

